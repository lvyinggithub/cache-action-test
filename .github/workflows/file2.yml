

name: Caching file2

on: 
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: envSet
      id: envSet
      run: |
        echo "::set-output name=envSetStr::teststr"
    - name: echo env 
      run: echo  ${{ steps.envSet.outputs.envSetStr }};#echo "::set-output name=envSetStr::$(npm config get cache)"



    - name: ls  
      run: cd ./testdir;ls -l

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-type: pro
      with:
        path: ./testdir
        key: ${{ runner.os }}-build-${{ env.cache-type }}-${{ hashFiles('./testdir/Dockerfile') }}
    - name: cachefilehash
      id: cachefilehash
      uses: actions/cache@v2
      with:
        path: cachefilehash
        key: ${{ runner.os }}-build-${{ env.cache-type }}-${{ hashFiles('./testdir/Dockerfile') }}

    - name: ls  
      run: cd ./testdir;ls -l
    - name: hash
      run: echo ${{ hashFiles('./testdir/README.md') }}

    - name: Generate cachefilehash
      if: steps.cachefilehash.outputs.cache-hit != 'true'
      run: echo "using cache";
    - name: Generate cachefilehash
      if: steps.cachefilehash.outputs.cache-hit != 'false'
      run: echo "no cache";
    - name: ls  
      run: cd ./testdir;ls -l




